{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FILED_ALPHABETICALLY","SORT_FILED_BY_LENGTH","REVERSE","App","useState","sortField","setSortField","reverse","setReverse","goodsCopy","goods","preparedGoods","sort","firstGood","secondGood","localeCompare","length","getPreparedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAA4B,iBAC5BC,EAAuB,SACvBC,GAAU,EA2BT,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACMC,EA5BR,SAA0BC,EAA1B,GAA0D,IAAvBL,EAAsB,EAAtBA,UAAWE,EAAW,EAAXA,QACxCI,EAAa,YAAOD,GAqBxB,OAnBIL,GACFM,EAAcC,MAAK,SAACC,EAAWC,GAC7B,OAAQT,GACN,KAAKL,EACH,OAAOa,EAAUE,cAAcD,GAEjC,KAAKb,EACH,OAAOY,EAAUG,OAASF,EAAWE,OAEvC,QACE,OAAO,MAKXT,IAAYL,IACdS,EAAgBA,EAAcJ,WAGzBI,EAMWM,CAAiBlB,EAAiB,CAAEM,YAAWE,YAEjE,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UAAW,CACjC,WAAYf,IAAcL,IAE5BqB,QAAS,WACPf,EAAaN,IANjB,iCAYA,wBACEmB,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,WAAYf,IAAcJ,IAE5BoB,QAAS,WACPf,EAAaL,IANjB,4BAYEM,EAWA,wBACEY,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,WAAYf,IAAcH,IAE5BmB,QAAS,WACPb,GAAW,IANf,qBAVA,wBACEW,KAAK,SACLD,UAAU,6BACVG,QAAS,WACPb,EAAWN,IAJf,sBAuBAG,GAAaE,IACb,wBACEY,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPf,EAAa,IACbE,GAAW,IALf,sBAaJ,6BACGC,EAAUa,KAAI,SAAAC,GAAI,OACjB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YCpHlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.614716c6.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FILED_ALPHABETICALLY = 'alphabetically';\nconst SORT_FILED_BY_LENGTH = 'length';\nconst REVERSE = true;\n\nfunction getPreparedGoods(goods, { sortField, reverse }) {\n  let preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((firstGood, secondGood) => {\n      switch (sortField) {\n        case SORT_FILED_ALPHABETICALLY:\n          return firstGood.localeCompare(secondGood);\n\n        case SORT_FILED_BY_LENGTH:\n          return firstGood.length - secondGood.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverse === REVERSE) {\n    preparedGoods = preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [reverse, setReverse] = useState(false);\n  const goodsCopy = getPreparedGoods(goodsFromServer, { sortField, reverse });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': sortField !== SORT_FILED_ALPHABETICALLY,\n          })}\n          onClick={() => {\n            setSortField(SORT_FILED_ALPHABETICALLY);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': sortField !== SORT_FILED_BY_LENGTH,\n          })}\n          onClick={() => {\n            setSortField(SORT_FILED_BY_LENGTH);\n          }}\n        >\n          Sort by length\n        </button>\n\n        {!reverse ? (\n          <button\n            type=\"button\"\n            className=\"button is-warning is-light\"\n            onClick={() => {\n              setReverse(REVERSE);\n            }}\n          >\n            Reverse\n          </button>\n        ) : (\n          <button\n            type=\"button\"\n            className={cn('button', 'is-warning', {\n              'is-light': sortField === REVERSE,\n            })}\n            onClick={() => {\n              setReverse(false);\n            }}\n          >\n            Reverse\n          </button>\n        )}\n\n        {(sortField || reverse) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortField('');\n              setReverse(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goodsCopy.map(good => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}